// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace BSvsMZP.RegistrarAlt {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="RegistrarAltSoap", Namespace="http://tempuri.org/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DistributableObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ComponentInfo))]
    public partial class RegistrarAlt : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGamesAltOperationCompleted;
        
        private System.Threading.SendOrPostCallback AmAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeStatusOperationCompleted;
        
        public RegistrarAlt() {
            this.Url = "http://cs5200web.serv.usu.edu/RegistrarAlt.asmx";
        }
        
        public RegistrarAlt(string url) {
            this.Url = url;
        }
        
        public event RegisterGameCompletedEventHandler RegisterGameCompleted;
        
        public event GetGamesCompletedEventHandler GetGamesCompleted;
        
        public event GetGamesAltCompletedEventHandler GetGamesAltCompleted;
        
        public event AmAliveCompletedEventHandler AmAliveCompleted;
        
        public event ChangeStatusCompletedEventHandler ChangeStatusCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public GameInfo RegisterGame(string label, EndPoint publicEP) {
            object[] results = this.Invoke("RegisterGame", new object[] {
                        label,
                        publicEP});
            return ((GameInfo)(results[0]));
        }
        
        public System.IAsyncResult BeginRegisterGame(string label, EndPoint publicEP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterGame", new object[] {
                        label,
                        publicEP}, callback, asyncState);
        }
        
        public GameInfo EndRegisterGame(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GameInfo)(results[0]));
        }
        
        public void RegisterGameAsync(string label, EndPoint publicEP) {
            this.RegisterGameAsync(label, publicEP, null);
        }
        
        public void RegisterGameAsync(string label, EndPoint publicEP, object userState) {
            if ((this.RegisterGameOperationCompleted == null)) {
                this.RegisterGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterGameCompleted);
            }
            this.InvokeAsync("RegisterGame", new object[] {
                        label,
                        publicEP}, this.RegisterGameOperationCompleted, userState);
        }
        
        private void OnRegisterGameCompleted(object arg) {
            if ((this.RegisterGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterGameCompleted(this, new RegisterGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public GameInfo[] GetGames(GameStatus status) {
            object[] results = this.Invoke("GetGames", new object[] {
                        status});
            return ((GameInfo[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetGames(GameStatus status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGames", new object[] {
                        status}, callback, asyncState);
        }
        
        public GameInfo[] EndGetGames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GameInfo[])(results[0]));
        }
        
        public void GetGamesAsync(GameStatus status) {
            this.GetGamesAsync(status, null);
        }
        
        public void GetGamesAsync(GameStatus status, object userState) {
            if ((this.GetGamesOperationCompleted == null)) {
                this.GetGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGamesCompleted);
            }
            this.InvokeAsync("GetGames", new object[] {
                        status}, this.GetGamesOperationCompleted, userState);
        }
        
        private void OnGetGamesCompleted(object arg) {
            if ((this.GetGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGamesCompleted(this, new GetGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGamesAlt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public GameInfoAlt[] GetGamesAlt(GameStatus status) {
            object[] results = this.Invoke("GetGamesAlt", new object[] {
                        status});
            return ((GameInfoAlt[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetGamesAlt(GameStatus status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGamesAlt", new object[] {
                        status}, callback, asyncState);
        }
        
        public GameInfoAlt[] EndGetGamesAlt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GameInfoAlt[])(results[0]));
        }
        
        public void GetGamesAltAsync(GameStatus status) {
            this.GetGamesAltAsync(status, null);
        }
        
        public void GetGamesAltAsync(GameStatus status, object userState) {
            if ((this.GetGamesAltOperationCompleted == null)) {
                this.GetGamesAltOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGamesAltCompleted);
            }
            this.InvokeAsync("GetGamesAlt", new object[] {
                        status}, this.GetGamesAltOperationCompleted, userState);
        }
        
        private void OnGetGamesAltCompleted(object arg) {
            if ((this.GetGamesAltCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGamesAltCompleted(this, new GetGamesAltCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AmAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void AmAlive(int gameId) {
            this.Invoke("AmAlive", new object[] {
                        gameId});
        }
        
        public System.IAsyncResult BeginAmAlive(int gameId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AmAlive", new object[] {
                        gameId}, callback, asyncState);
        }
        
        public void EndAmAlive(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void AmAliveAsync(int gameId) {
            this.AmAliveAsync(gameId, null);
        }
        
        public void AmAliveAsync(int gameId, object userState) {
            if ((this.AmAliveOperationCompleted == null)) {
                this.AmAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAmAliveCompleted);
            }
            this.InvokeAsync("AmAlive", new object[] {
                        gameId}, this.AmAliveOperationCompleted, userState);
        }
        
        private void OnAmAliveCompleted(object arg) {
            if ((this.AmAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AmAliveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void ChangeStatus(int gameId, GameStatus status) {
            this.Invoke("ChangeStatus", new object[] {
                        gameId,
                        status});
        }
        
        public System.IAsyncResult BeginChangeStatus(int gameId, GameStatus status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeStatus", new object[] {
                        gameId,
                        status}, callback, asyncState);
        }
        
        public void EndChangeStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void ChangeStatusAsync(int gameId, GameStatus status) {
            this.ChangeStatusAsync(gameId, status, null);
        }
        
        public void ChangeStatusAsync(int gameId, GameStatus status, object userState) {
            if ((this.ChangeStatusOperationCompleted == null)) {
                this.ChangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStatusCompleted);
            }
            this.InvokeAsync("ChangeStatus", new object[] {
                        gameId,
                        status}, this.ChangeStatusOperationCompleted, userState);
        }
        
        private void OnChangeStatusCompleted(object arg) {
            if ((this.ChangeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EndPoint : DistributableObject {
        
        /// <remarks/>
        public int Address;
        
        /// <remarks/>
        public int Port;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EndPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ComponentInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GameInfo))]
    public partial class DistributableObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GameInfo))]
    public partial class ComponentInfo : DistributableObject {
        
        /// <remarks/>
        public short Id;
        
        /// <remarks/>
        public EndPoint CommunicationEndPoint;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GameInfo : ComponentInfo {
        
        /// <remarks/>
        public string Label;
        
        /// <remarks/>
        public GameStatus Status;
        
        /// <remarks/>
        public System.DateTime AliveTimestamp;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum GameStatus {
        
        /// <remarks/>
        NOT_INITIAlIZED,
        
        /// <remarks/>
        AVAILABLE,
        
        /// <remarks/>
        RUNNING,
        
        /// <remarks/>
        COMPLETED,
        
        /// <remarks/>
        DEAD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GameInfoAlt {
        
        /// <remarks/>
        public short Id;
        
        /// <remarks/>
        public string CommunicationEndPoint;
        
        /// <remarks/>
        public string Label;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string AliveTimestamp;
    }
    
    public partial class RegisterGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GameInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfo)(this.results[0]));
            }
        }
    }
    
    public delegate void RegisterGameCompletedEventHandler(object sender, RegisterGameCompletedEventArgs args);
    
    public partial class GetGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GameInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfo[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetGamesCompletedEventHandler(object sender, GetGamesCompletedEventArgs args);
    
    public partial class GetGamesAltCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGamesAltCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GameInfoAlt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameInfoAlt[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetGamesAltCompletedEventHandler(object sender, GetGamesAltCompletedEventArgs args);
    
    public delegate void AmAliveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public delegate void ChangeStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
}
